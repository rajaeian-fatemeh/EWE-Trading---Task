---
title: "Fatemeh Rajaeian - Task"
format: html
---

```{python}
import requests
import pandas as pd
import matplotlib.pyplot as plt

# define API endpoint URL
url = "https://alsi.gie.eu/api"


params = {
    "country": "DE",
    "key": "024f81699503eb41870b93732781370a"
}

# making  'GET request'
response = requests.get(url, params=params)

if response.status_code == 200:
    # extracting JSON data
    data = response.json()
    
    # extract the 'data' key which contains list of dictionaries for converting list of dictionaries into the dataframe
    data_list = data.get('data', [])
    
     
    df = pd.DataFrame(data_list)
    
    # converting 'sendout' column to numeric type
    df['sendOut'] = pd.to_numeric(df['sendOut'], errors='coerce')
    
    # converting 'gasdaystart' column to datetime type
    df['gasDayStart'] = pd.to_datetime(df['gasDayStart'])
    
    # filtering data between 26 march to 26 april
    filtered_df = df[(df['gasDayStart'] >= '2024-03-26') & (df['gasDayStart'] <= '2024-04-26')]
    
    # sorting dataframe
    filtered_df = filtered_df.sort_values(by='gasDayStart')
    
    # checking if data for 26 march exists, if not add it
    if not any(filtered_df['gasDayStart'] == '2024-03-26'):
        
        data_26_march = df[df['gasDayStart'] == '2024-03-26']
        filtered_df = pd.concat([filtered_df, data_26_march], ignore_index=True)
    
    # plot
    plt.figure(figsize=(10, 6))
    plt.plot(filtered_df['gasDayStart'], filtered_df['sendOut'], marker='o', linestyle='-')
    
    
    plt.ylim(0, 225)
    
    
    plt.xticks(filtered_df['gasDayStart'][::2], rotation=45)
    
    plt.title('LNG Send-outs into Germany (26 March - 26 April)')
    plt.xlabel('Gas Day Start')
    plt.ylabel('Send Out')
    plt.grid(True)
    plt.tight_layout()
    plt.show()
    
else:
    print("Error:", response.status_code)


```

